{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst startBtnEl = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('span[data-days]');\nconst hoursEl = document.querySelector('span[data-hours]');\nconst minutesEl = document.querySelector('span[data-minutes]');\nconst secondsEl = document.querySelector('span[data-seconds]');\n\nstartBtnEl.disabled = true;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    const diff = userSelectedDate - new Date().getTime();\n\n    if (diff <= 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      startBtnEl.disabled = true;\n    } else {\n      startBtnEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nstartBtnEl.addEventListener('click', handleClick);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction formattedTime(time) {\n  return String(time).padStart(2, '0');\n}\n\nfunction handleClick() {\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    if (diff <= 0) {\n      inputEl.disabled = false;\n      clearInterval(intervalId);\n      return;\n    }\n    inputEl.disabled = true;\n    startBtnEl.disabled = true;\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    console.log(days, hours, minutes, seconds);\n\n    daysEl.textContent = formattedTime(days);\n    hoursEl.textContent = formattedTime(hours);\n    minutesEl.textContent = formattedTime(minutes);\n    secondsEl.textContent = formattedTime(seconds);\n  }, 1000);\n}\n"],"names":["inputEl","startBtnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","handleClick","convertMs","ms","days","hours","minutes","seconds","formattedTime","time","intervalId","diff"],"mappings":"0IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EAE7DJ,EAAW,SAAW,GAEtB,IAAIK,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC9BF,EAAmB,IAAI,KAAM,EAAC,QAAO,GAEtC,GACVG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDR,EAAW,SAAW,IAEtBA,EAAW,SAAW,EAEzB,CACH,EAEAS,EAAUV,EAASO,CAAO,EAE1BN,EAAW,iBAAiB,QAASU,CAAW,EAEhD,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAcC,EAAM,CAC3B,OAAO,OAAOA,CAAI,EAAE,SAAS,EAAG,GAAG,CACrC,CAEA,SAASR,GAAc,CACrB,MAAMS,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOf,EAAmB,KAAK,IAAG,EACxC,GAAIe,GAAQ,EAAG,CACbrB,EAAQ,SAAW,GACnB,cAAcoB,CAAU,EACxB,MACD,CACDpB,EAAQ,SAAW,GACnBC,EAAW,SAAW,GACtB,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAI,EACxD,QAAQ,IAAIP,EAAMC,EAAOC,EAASC,CAAO,EAEzCf,EAAO,YAAcgB,EAAcJ,CAAI,EACvCX,EAAQ,YAAce,EAAcH,CAAK,EACzCX,EAAU,YAAcc,EAAcF,CAAO,EAC7CX,EAAU,YAAca,EAAcD,CAAO,CAC9C,EAAE,GAAI,CACT"}